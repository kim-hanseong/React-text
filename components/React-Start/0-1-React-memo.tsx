//*** 무거운 연산을 기억해두는 메모제이션 ***
//* 메모제이션 : 랜더링 방지 *
//* 메모제이션은 비용이 든다 값을 비교하고 랜더링 또는 재계산이 필요하지않는지확인하는 작업 *
//* 또한 이전 결과물을 저장해두었다가 다시꺼내와야하는 작업 두가지 비용이 있다. *

//* 메모제이션을 쓰지 않을때 발생하는비용 *
//* 랜더링의 비용 , 로직의 재실행 , 모든 자식 컴포넌트의 재실행 , 구트리와 신트리의 비교 *

//* p.186 *
//* handleClick 으로 랜더링을 강제로 일으키면 log 가 계속 출력되는것을 볼 수 있다 *
//* : 컴포넌트 APP 이 호출되며 useMath 가 계속호출되고 내부의 값 같지만 참조가 변하기 때문이다  *

//* p.187 *
//* useMATh 의 값을 useMemo 로 감싸면 값이 변경되지 않는 한 같은 결과물을 가질 수 있고 *
//* 컴포넌트 리랜더링 뿐 아니라 사용하는 쪽에서도 변하지않는 고정 값을 사용 할 수 있는 믿음이 있다. *
